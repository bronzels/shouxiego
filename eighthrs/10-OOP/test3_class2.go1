package main

import "fmt"

type Human struct {
	name string
	sex string
}

func (this *Human) Eat() {
	fmt.Println("Human.Eat()...")
}

func (this *Human) Walk() {
	fmt.Println("Human.Walk()...")
}

type SuperMan struct {
	Human //Superman类继承了Human类的方法

	level int
}

//重定义父类的方法Eat()
func (this *SuperMan) Eat() {
	fmt.Println("Superman.Eat()...")
}

//重定义父类的方法Walk()
func (this *SuperMan) Walk() {
	fmt.Println("Superman.Walk()...")
}

//子类新方法()
func (this *SuperMan) Fly() {
	fmt.Println("Superman.Fly()...")
}

func (this *SuperMan) Print() {
	fmt.Println("name = ", this.name)
	fmt.Println("sex = ", this.sex)
	fmt.Println("level = ", this.level)
}

func main() {
	h := Human{"zhang3", "femail"}

	h.Eat()
	h.Walk()

	var s SuperMan
	s.name = "li4"
	s.sex = "mail"
	s.level = 88

	s.Walk()
	s.Eat()
	s.Fly()

	s.Print()
}